name: terraform
on:
  push:
    branches: [ master ]
    paths:
      - 'terraform/**'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        id: terraform-format
        run: cd terraform; terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: terraform-init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd terraform; terraform init -backend-config "bucket=terraform-pa-ecs"

      - name: Terraform Validate 
        id: terraform-validate
        run: cd terraform; terraform validate -no-color

      - name: Terraform Plan
        id: terraform-plan
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd terraform; terraform plan

      - name: Terraform Apply
        id: terraform-apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd terraform; terraform apply -auto-approve